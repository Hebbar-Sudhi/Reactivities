{"version":3,"sources":["app/layout/NavBar.tsx","app/layout/LoadingIndicator.tsx","app/api/agent.ts","app/stores/store.ts","app/stores/activityStore.ts","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityDashboard.tsx","features/home/HomePage.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["NavBar","Menu","inverted","fixed","secondary","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","name","Button","background","content","LoadingIndicator","Dimmer","active","Loader","axios","defaults","baseURL","process","interceptors","response","use","a","console","log","Promise","reject","responseBody","data","requests","url","get","then","body","post","put","delete","agent","Activities","list","details","id","create","activity","update","store","activityStore","activityRegister","Map","selectedActivity","undefined","editMode","loading","initialLoading","loadActivities","forEach","setActivity","setInitialLoading","loadActivity","getActivity","runInAction","date","split","set","state","createActivity","uuid","updateActivity","deleteActivity","makeAutoObservable","this","Array","from","values","sort","x","y","Date","parse","Object","entries","activitiesByDate","reduce","activities","StoreContext","createContext","useStore","useContext","ActivityFilters","vertical","size","width","marginTop","Header","icon","attached","color","ActivityListItem","Segment","Group","Image","circular","Content","Link","title","Description","Icon","venue","clearing","description","floated","observer","groupedActivities","map","group","sub","useEffect","Grid","Column","HomePage","textAlign","className","text","marginBottom","history","useHistory","useParams","useState","category","city","handleInputChange","event","target","value","Form","onSubmit","length","newActivity","push","autoComplete","Field","placeholder","onChange","type","border","Comment","Avatar","Author","Metadata","Text","Actions","Action","reply","TextArea","labelPosition","activityImageStyle","filter","activityImageTextStyle","position","bottom","left","height","basic","padding","fluid","verticalAlign","List","relaxed","divided","Label","ribbon","Extra","location","useLocation","path","component","render","ActivityDashboard","ActivityDetails","ActivityForm","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","window","scrollTo","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.269d8065.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button, Container, Menu } from \"semantic-ui-react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction NavBar() {\r\n\r\n  return (\r\n    <Menu inverted fixed=\"top\" secondary>\r\n      <Container>\r\n        <Menu.Item as={NavLink} to='/' exact header>\r\n          <img\r\n            src=\"/assests/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginRight: \"10px\" }}\r\n          />\r\n          Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to='/activities' name=\"Activities\" />\r\n        <Menu.Item>\r\n          <Button\r\n            as = {NavLink}\r\n            to = '/createActivity'\r\n            style={{background:'#B4DBC0'}}\r\n            content=\"Create Activity\"\r\n          />\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  inverted?: boolean;\r\n  content?: string;\r\n}\r\n\r\nexport default function LoadingIndicator({\r\n  inverted = true,\r\n  content = \"Loading...\",\r\n}: Props) {\r\n  return (\r\n    <Dimmer active={true} inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n}\r\n","import axios, { AxiosResponse } from \"axios\";\r\nimport { Activity } from \"../models/Activity\";\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resovle) => {\r\n    setTimeout(resovle, delay);\r\n  });\r\n};\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(async (response) => {\r\n  try {\r\n    if (process.env.NODE_ENV === 'development') await sleep(1500);\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return await Promise.reject(error);\r\n  }\r\n});\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: () => requests.get<Activity[]>(\"/activities\"),\r\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n  create: (activity: Activity) => requests.post<void>(\"/activities\", activity),\r\n  update: (activity: Activity) =>\r\n    requests.put<void>(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n};\r\n\r\nconst agent = {\r\n  Activities,\r\n};\r\n\r\nexport default agent;\r\n","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\n\r\ninterface Store{\r\n    activityStore : ActivityStore\r\n}\r\n\r\nexport const store : Store = {\r\n    activityStore: new ActivityStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore(){\r\n    return useContext(StoreContext);\r\n}","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity } from \"../models/Activity\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nexport default class ActivityStore {\r\n  activityRegister = new Map<string, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  initialLoading = true;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get activitiesByDate() {\r\n    return Array.from(this.activityRegister.values()).sort(\r\n      (x, y) => Date.parse(x.date) - Date.parse(y.date)\r\n    );\r\n  }\r\n\r\n  get groupedActivities() {\r\n    return Object.entries(\r\n      this.activitiesByDate.reduce((activities, activity) => {\r\n        const date = activity.date;\r\n        activities[date] = activities[date]\r\n          ? [...activities[date], activity]\r\n          : [activity];\r\n        return activities;\r\n      }, {} as { [key: string]: Activity[] })\r\n    );\r\n  }\r\n\r\n  loadActivities = async () => {\r\n    this.initialLoading = true;\r\n    try {\r\n      const activities = await agent.Activities.list();\r\n\r\n      activities.forEach((activity) => {\r\n        this.setActivity(activity);\r\n      });\r\n\r\n      this.setInitialLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setInitialLoading(false);\r\n    }\r\n  };\r\n\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n\r\n    if (activity) {\r\n      this.selectedActivity = activity;\r\n      return activity;\r\n    } else {\r\n      this.setInitialLoading(true);\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n        this.setActivity(activity);\r\n        runInAction(() => {\r\n          this.selectedActivity = activity;\r\n        });\r\n\r\n        this.setInitialLoading(false);\r\n        return activity;\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.setInitialLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  private getActivity = (id: string) => {\r\n    return this.activityRegister.get(id);\r\n  };\r\n\r\n  private setActivity = (activity: Activity) => {\r\n    activity.date = activity.date.split(\"T\")[0];\r\n    this.activityRegister.set(activity.id, activity);\r\n  };\r\n\r\n  setInitialLoading = (state: boolean) => {\r\n    this.initialLoading = state;\r\n  };\r\n\r\n  createActivity = async (activity: Activity) => {\r\n    this.loading = true;\r\n    activity.id = uuid();\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      runInAction(() => {\r\n        this.activityRegister.set(activity.id, activity);\r\n        this.selectedActivity = activity;\r\n        this.editMode = false;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateActivity = async (activity: Activity) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(() => {\r\n        this.activityRegister.set(activity.id, activity);\r\n        this.loading = false;\r\n        this.editMode = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(() => {\r\n        this.activityRegister.delete(id);\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\n\r\nexport default function ActivityFilters() {\r\n  return (\r\n    <>\r\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 27 }}>\r\n        <Header icon=\"filter\" attached content=\"Filters\" style={{color:\"#E14658\"}} />\r\n        <Menu.Item content=\"All Activities\" />\r\n        <Menu.Item content=\"I'm going\" />\r\n        <Menu.Item content=\"I'm hosting\" />\r\n      </Menu>\r\n      <Header />\r\n      <Calendar />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/Activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nfunction ActivityListItem({ activity }: Props) {\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image size=\"tiny\" circular src=\"/assests/user.png\" />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>Hosted by Hebbar</Item.Description>\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name=\"calendar alternate outline\" /> {activity.date}\r\n          <Icon name=\"map marker alternate\" /> {activity.venue}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>Attendees go here...</Segment>\r\n      <Segment clearing>\r\n        <span> {activity.description} </span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          style={{background:\"#416A59\", color:\"white\"}}\r\n          floated=\"right\"\r\n          content=\"View\"\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n\r\nexport default ActivityListItem;\r\n","import React, { Fragment } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nexport default observer(function ActivityList() {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub style={{color:\"#AF473C\"}}>\r\n            {group}\r\n          </Header>\r\n          {activities.map((activity) => (\r\n            <ActivityListItem\r\n              key={activity.id}\r\n              activity={activity}\r\n            ></ActivityListItem>\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingIndicator from \"../../../app/layout/LoadingIndicator\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityList from \"./ActivityList\";\r\n\r\nfunction ActivityDashboard() {\r\n  const { activityStore } = useStore();\r\n  const { loadActivities, activityRegister } = activityStore;\r\n\r\n  useEffect(() => {\r\n    if (activityRegister.size <= 1) loadActivities();\r\n  }, [activityRegister.size, loadActivities]);\r\n\r\n  if (activityStore.initialLoading)\r\n    return <LoadingIndicator content=\"Loading Activities...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        <ActivityList />\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <ActivityFilters/>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default observer(ActivityDashboard);\r\n","import { Link } from \"react-router-dom\";\r\nimport { Container, Header, Segment, Image, Button } from \"semantic-ui-react\";\r\n\r\nexport default function HomePage() {\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"/assests/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n          Reactivities\r\n        </Header>\r\n        <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\r\n        <Button as={Link} to=\"/activities\" size='huge' inverted>\r\n          Take to me the Activities!\r\n        </Button>\r\n      </Container>\r\n    </Segment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { ChangeEvent, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Form, Segment } from \"semantic-ui-react\";\r\nimport LoadingIndicator from \"../../../app/layout/LoadingIndicator\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nexport default observer(function ActivityForm() {\r\n  const history = useHistory();\r\n  const { activityStore } = useStore();\r\n  const {\r\n    createActivity,\r\n    updateActivity,\r\n    loading,\r\n    loadActivity,\r\n    initialLoading,\r\n  } = activityStore;\r\n\r\n  const { id } = useParams<{ id: string }>();\r\n  const [activity, setActivity] = useState({\r\n    id: \"\",\r\n    title: \"\",\r\n    category: \"\",\r\n    description: \"\",\r\n    date: \"\",\r\n    city: \"\",\r\n    venue: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id).then((activity) => setActivity(activity!));\r\n  }, [id, loadActivity]);\r\n\r\n  function handleSubmit() {\r\n    if (activity.id.length === 0) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid(),\r\n      };\r\n      createActivity(newActivity).then(() =>\r\n        history.push(`/activities/${newActivity.id}`)\r\n      );\r\n    } else {\r\n      updateActivity(activity).then(() =>\r\n        history.push(`/activities/${activity.id}`)\r\n      );\r\n    }\r\n  }\r\n\r\n  function handleInputChange(\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    const { name, value } = event.target;\r\n    setActivity({ ...activity, [name]: value });\r\n  }\r\n\r\n  if (initialLoading) return <LoadingIndicator content=\"Loading activity...\" />;\r\n\r\n  return (\r\n    <Segment clearing style={{background:\"#F2F2F2\"}}>\r\n      <Form onSubmit={handleSubmit} autoComplete=\"off\" >\r\n        <Form.Field>\r\n          <label>Title</label>\r\n          <input\r\n            placeholder=\"Title\"\r\n            value={activity.title}\r\n            name=\"title\"\r\n            onChange={handleInputChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Description</label>\r\n          <textarea\r\n            placeholder=\"Description\"\r\n            value={activity.description}\r\n            name=\"description\"\r\n            onChange={handleInputChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Category</label>\r\n          <input\r\n            placeholder=\"Category\"\r\n            value={activity.category}\r\n            name=\"category\"\r\n            onChange={handleInputChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            placeholder=\"Date\"\r\n            value={activity.date}\r\n            name=\"date\"\r\n            onChange={handleInputChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>City</label>\r\n          <input\r\n            placeholder=\"City\"\r\n            value={activity.city}\r\n            name=\"city\"\r\n            onChange={handleInputChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Venue</label>\r\n          <input\r\n            placeholder=\"Venue\"\r\n            value={activity.venue}\r\n            name=\"venue\"\r\n            onChange={handleInputChange}\r\n          />\r\n        </Form.Field>\r\n        <Button\r\n          loading={loading}\r\n          floated=\"right\"\r\n          type=\"submit\"\r\n          content=\"Submit\"\r\n          style={{ background: \"#636B46\", color: \"white\" }}\r\n        />\r\n        <Button\r\n          as={Link}\r\n          to=\"/activities\"\r\n          floated=\"right\"\r\n          type=\"button\"\r\n          content=\"Cancel\"\r\n          style={{ background: \"#AF473C\", color: \"white\" }}\r\n        />\r\n      </Form>\r\n    </Segment>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Segment, Header, Comment, Form, Button } from \"semantic-ui-react\";\r\n\r\nexport default observer(function ActivityDetailedChat() {\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        style={{ border: \"none\", background:\"#01ABAA\", color:\"white\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Comment.Group>\r\n          <Comment>\r\n            <Comment.Avatar src=\"/assests/user.png\" />\r\n            <Comment.Content>\r\n              <Comment.Author as=\"a\">Matt</Comment.Author>\r\n              <Comment.Metadata>\r\n                <div>Today at 5:42PM</div>\r\n              </Comment.Metadata>\r\n              <Comment.Text>How artistic!</Comment.Text>\r\n              <Comment.Actions>\r\n                <Comment.Action>Reply</Comment.Action>\r\n              </Comment.Actions>\r\n            </Comment.Content>\r\n          </Comment>\r\n\r\n          <Comment>\r\n            <Comment.Avatar src=\"/assests/user.png\" />\r\n            <Comment.Content>\r\n              <Comment.Author as=\"a\">Joe Henderson</Comment.Author>\r\n              <Comment.Metadata>\r\n                <div>5 days ago</div>\r\n              </Comment.Metadata>\r\n              <Comment.Text>Dude, this is awesome. Thanks so much</Comment.Text>\r\n              <Comment.Actions>\r\n                <Comment.Action>Reply</Comment.Action>\r\n              </Comment.Actions>\r\n            </Comment.Content>\r\n          </Comment>\r\n\r\n          <Form reply>\r\n            <Form.TextArea />\r\n            <Button\r\n              content=\"Add Reply\"\r\n              labelPosition=\"left\"\r\n              icon=\"edit\"\r\n              style={{ background:\"#328CC1\", color:\"white\" }}\r\n            />\r\n          </Form>\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header, Item, Segment, Image } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/Activity\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(50%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        <Image\r\n          src={`/assests/categoryImages/${activity.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>{activity.date}</p>\r\n                <p>\r\n                  Hosted by <strong>Hebbar</strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        <Button style={{ background: \"#3B945E\", color: \"white\" }}>Join Activity</Button>\r\n        <Button style={{ background: \"#6B6E70\", color: \"white\" }}>Cancel attendance</Button>\r\n        <Button style={{ background: \"#EB6B40\", color: \"white\" }} floated=\"right\">\r\n          Manage Event\r\n        </Button>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/Activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" style={{color:\"#373F27\"}} name=\"info\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar alternate outline\" size=\"large\" style={{color:\"#373F27\"}} />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>{activity.date}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"map marker alternate\" size=\"large\" style={{color:\"#373F27\"}} />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nexport default observer(function ActivityDetailedSidebar() {\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\", background:\"#01ABAA\", color:\"white\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        \r\n      >\r\n        3 People Going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          <Item style={{ position: \"relative\" }}>\r\n            <Label\r\n              style={{ position: \"absolute\", background: \"#EB6B40\", color: \"white\" }}\r\n              ribbon=\"right\"\r\n            >\r\n              Host\r\n            </Label>\r\n            <Image size=\"tiny\" src={\"/assests/user.png\"} />\r\n            <Item.Content verticalAlign=\"middle\">\r\n              <Item.Header as=\"h3\">\r\n                <Link to={`#`}>Hebbar</Link>\r\n              </Item.Header>\r\n              <Item.Extra style={{ color: \"#EEAA7B\" }}>Following</Item.Extra>\r\n            </Item.Content>\r\n          </Item>\r\n\r\n          <Item style={{ position: \"relative\" }}>\r\n            <Image size=\"tiny\" src={\"/assests/user.png\"} />\r\n            <Item.Content verticalAlign=\"middle\">\r\n              <Item.Header as=\"h3\">\r\n                <Link to={`#`}>Tom</Link>\r\n              </Item.Header>\r\n              <Item.Extra style={{ color: \"#EEAA7B\" }}>Following</Item.Extra>\r\n            </Item.Content>\r\n          </Item>\r\n\r\n          <Item style={{ position: \"relative\" }}>\r\n            <Image size=\"tiny\" src={\"/assests/user.png\"} />\r\n            <Item.Content verticalAlign=\"middle\">\r\n              <Item.Header as=\"h3\">\r\n                <Link to={`#`}>Sally</Link>\r\n              </Item.Header>\r\n            </Item.Content>\r\n          </Item>\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingIndicator from \"../../../app/layout/LoadingIndicator\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity: activity,\r\n    loadActivity,\r\n    initialLoading,\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n  }, [id, loadActivity]);\r\n\r\n  if (initialLoading || !activity) return <LoadingIndicator />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity}/>\r\n        <ActivityDetailedInfo activity={activity}/>\r\n        <ActivityDetailedChat/>\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSidebar/>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport NavBar from \"./NavBar\";\r\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport HomePage from \"../../features/home/HomePage\";\r\nimport { Route, useLocation } from \"react-router-dom\";\r\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\r\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <>\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route\r\n        path={\"/(.+)\"}\r\n        render={() => (\r\n          <>\r\n            <NavBar />\r\n            <Container style={{ marginTop: \"6em\", marginBottom: \"6em\" }}>\r\n              <Route exact path=\"/activities\" component={ActivityDashboard} />\r\n              <Route path=\"/activities/:id\" component={ActivityDetails} />\r\n              <Route\r\n                key={location.key}\r\n                path={[\"/createActivity\", \"/manage/:id\"]}\r\n                component={ActivityForm}\r\n              />\r\n            </Container>\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./app/layout/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"./app/layout/styles.css\";\r\nimport { store, StoreContext } from \"./app/stores/store\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\r\n\r\nReactDOM.render(\r\n  <StoreContext.Provider value={store}>\r\n    <BrowserRouter>\r\n      <ScrollToTop/>\r\n      <App />\r\n    </BrowserRouter>\r\n  </StoreContext.Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}